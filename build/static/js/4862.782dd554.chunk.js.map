{"version":3,"file":"static/js/4862.782dd554.chunk.js","mappings":"oSAuGA,MAjFA,SAAiBA,GAAa,IAAVC,EAAKD,EAALC,MAMlBC,GAA0CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GAKhCI,EAAgBP,EAAMQ,QAHL,SAACC,GAAI,OAC1BJ,EAAcK,SAASD,EAAKE,aAAwC,IAAzBN,EAAcO,MAAa,IAIxE,OACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAC,SAAA,EACbC,EAAAA,EAAAA,KAAA,OAAAD,UACEF,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CAACC,UAAU,cAAcC,eAAe,QAAQC,WAAW,SAAQL,SAAA,EACtEC,EAAAA,EAAAA,KAACK,EAAAA,GAAK,CAAAN,SAAC,UACPC,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CACHC,KAAMC,EAAAA,EACNC,QAAQ,SACRC,QAAQ,wCAEVV,EAAAA,EAAAA,KAACK,EAAAA,GAAK,UAGVR,EAAAA,EAAAA,MAAA,OAAKK,UAAU,iBAAgBH,SAAA,EAC7BC,EAAAA,EAAAA,KAACW,EAAAA,GAAW,CACVT,UAAU,yBACVU,cAAetB,EACfuB,YAAY,oBAAmBd,SAE9Bf,EAAM8B,KAAI,SAACC,GAAI,OACdf,EAAAA,EAAAA,KAACgB,EAAAA,GAAe,CAAuBC,MAAOF,EAAKpB,WAAWI,SAC3DgB,EAAKpB,YADcoB,EAAKpB,WAET,OAGtBE,EAAAA,EAAAA,MAACqB,EAAAA,GAAM,CAAChB,UAAU,yBAAyBiB,aAAa,MAAKpB,SAAA,EAC3DC,EAAAA,EAAAA,KAACoB,EAAAA,GAAU,CAACH,MAAM,MAAKlB,SAAC,SACxBC,EAAAA,EAAAA,KAACoB,EAAAA,GAAU,CAACH,MAAM,aAAYlB,SAAC,gBAC/BC,EAAAA,EAAAA,KAACoB,EAAAA,GAAU,CAACH,MAAM,YAAWlB,SAAC,eAC9BC,EAAAA,EAAAA,KAACoB,EAAAA,GAAU,CAACH,MAAM,WAAUlB,SAAC,iBAE/BF,EAAAA,EAAAA,MAAA,UACEwB,KAAK,SACLnB,UAAU,wJAAuJH,SAAA,EAEjKC,EAAAA,EAAAA,KAACsB,EAAAA,EAAW,CAACpB,UAAU,uCAAuC,cAAY,SAAS,gBAIvFL,EAAAA,EAAAA,MAAC0B,EAAAA,GAAK,CAACrB,UAAU,OAAMH,SAAA,EACrBC,EAAAA,EAAAA,KAACwB,EAAAA,GAAS,CAAAzB,UACRF,EAAAA,EAAAA,MAAC4B,EAAAA,GAAQ,CAAA1B,SAAA,EACPC,EAAAA,EAAAA,KAAC0B,EAAAA,GAAe,CAAA3B,SAAC,gBACjBC,EAAAA,EAAAA,KAAC0B,EAAAA,GAAe,CAACxB,UAAU,aAAYH,SAAC,eACxCC,EAAAA,EAAAA,KAAC0B,EAAAA,GAAe,CAACxB,UAAU,aAAYH,SAAC,cACxCC,EAAAA,EAAAA,KAAC0B,EAAAA,GAAe,CAACxB,UAAU,aAAYH,SAAC,oBAI5CC,EAAAA,EAAAA,KAAC2B,EAAAA,GAAS,CAAA5B,SACPR,EAAcuB,KAAI,SAACC,GAAI,OACtBlB,EAAAA,EAAAA,MAAC4B,EAAAA,GAAQ,CAAA1B,SAAA,EACPC,EAAAA,EAAAA,KAAC4B,EAAAA,GAAI,CAACC,GAAE,KAAAC,OAAOf,EAAKgB,IAAKhC,UACvBC,EAAAA,EAAAA,KAACgC,EAAAA,GAAS,CAAAjC,SAAEgB,EAAKpB,gBAEnBK,EAAAA,EAAAA,KAACgC,EAAAA,GAAS,CAAC9B,UAAU,aAAYH,SAAEgB,EAAKkB,aACxCjC,EAAAA,EAAAA,KAACgC,EAAAA,GAAS,CAAC9B,UAAU,aAAYH,SAAEgB,EAAKmB,YACxClC,EAAAA,EAAAA,KAACgC,EAAAA,GAAS,CAAC9B,UAAU,aAAYH,UACZ,IAAlBgB,EAAKoB,SAAoB,QAAU,WAPzBpB,EAAKgB,GAST,WAMvB,E,UCvFA,MATA,WACE,IAAM/C,GAAQoD,EAAAA,EAAAA,IAAmB,SACjC,OACEpC,EAAAA,EAAAA,KAACF,EAAAA,SAAc,CAAAC,UACbC,EAAAA,EAAAA,KAACqC,EAAQ,CAACrD,MAAOA,KAGvB,EAIO,SAAesD,IAAM,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAmB3B,SAAAF,IAAA,OAAAA,GAAAG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAnBM,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACuB,OAAtBN,GAAQO,EAAAA,EAAAA,gBAAcH,EAAAE,KAAA,EAELE,MAAM,uCAAwC,CACnEC,OAAQ,MACRC,QAAS,CACPC,cAAe,UAAYX,EAC3B,8BAA+B,OAEhC,KAAD,EANY,GAOQ,OAPhBC,EAAQG,EAAAQ,MAODC,OAAY,CAAAT,EAAAE,KAAA,cACjBQ,EAAAA,EAAAA,IAAK,CAAEC,QAAS,iCAAmC,CAAEF,OAAQ,MAAO,KAAD,KAEtEZ,EAASe,GAAG,CAADZ,EAAAE,KAAA,eACRQ,EAAAA,EAAAA,IAAK,CAAEC,QAAS,kBAAoB,CAAEF,OAAQ,MAAO,KAAD,UAAAT,EAAAE,KAAA,GAEpCL,EAASa,OAAO,KAAD,GAAxB,OAAPZ,EAAOE,EAAAQ,KAAAR,EAAAa,OAAA,SACNf,GAAO,yBAAAE,EAAAc,OAAA,GAAAnB,EAAA,MAEjBL,MAAA,KAAAC,UAAA,C","sources":["components/UserComps/UserList.js","pages/UserPages/AllUsers.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  InformationCircleIcon,\r\n  PrinterIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport {\r\n  Icon,\r\n  Table,\r\n  TableRow,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeaderCell,\r\n  TableBody,\r\n  Title,\r\n  Flex,\r\n  Select,\r\n  SelectItem,\r\n  MultiSelect,\r\n  MultiSelectItem,\r\n} from \"@tremor/react\";\r\n\r\nfunction UserList({ users }) {\r\n  \r\n\r\n\r\n\r\n\r\n  const [selectedNames, setSelectedNames] = useState([]);\r\n\r\n  const isUserSelected = (user) =>\r\n    selectedNames.includes(user.first_name) || selectedNames.length === 0;\r\n\r\n  const filteredUsers = users.filter(isUserSelected);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <Flex className=\"space-x-0.5\" justifyContent=\"start\" alignItems=\"center\">\r\n          <Title>Team</Title>\r\n          <Icon\r\n            icon={InformationCircleIcon}\r\n            variant=\"simple\"\r\n            tooltip=\"Shows general employee information\"\r\n          />\r\n          <Title></Title>\r\n        </Flex>\r\n      </div>\r\n      <div className=\"flex space-x-2\">\r\n        <MultiSelect\r\n          className=\"max-w-full sm:max-w-xs\"\r\n          onValueChange={setSelectedNames}\r\n          placeholder=\"Search by name...\"\r\n        >\r\n          {users.map((item) => (\r\n            <MultiSelectItem key={item.first_name} value={item.first_name}>\r\n              {item.first_name}\r\n            </MultiSelectItem>\r\n          ))}\r\n        </MultiSelect>\r\n        <Select className=\"max-w-full sm:max-w-xs\" defaultValue=\"all\">\r\n          <SelectItem value=\"all\">All</SelectItem>\r\n          <SelectItem value=\"first_name\">First Name</SelectItem>\r\n          <SelectItem value=\"last_name\">Last Name</SelectItem>\r\n          <SelectItem value=\"username\">Username</SelectItem>\r\n        </Select>\r\n        <button\r\n          type=\"button\"\r\n          className=\"inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\"\r\n        >\r\n          <PrinterIcon className=\"-ml-0.5 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\r\n          Export\r\n        </button>\r\n      </div>\r\n      <Table className=\"mt-6\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableHeaderCell>First Name</TableHeaderCell>\r\n            <TableHeaderCell className=\"text-right\">Last Name</TableHeaderCell>\r\n            <TableHeaderCell className=\"text-right\">Username</TableHeaderCell>\r\n            <TableHeaderCell className=\"text-right\">User Type</TableHeaderCell>\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        <TableBody>\r\n          {filteredUsers.map((item) => (\r\n            <TableRow key={item.id}>\r\n              <Link to={`./${item.id}`}>\r\n                <TableCell>{item.first_name}</TableCell>\r\n              </Link>\r\n              <TableCell className=\"text-right\">{item.last_name}</TableCell>\r\n              <TableCell className=\"text-right\">{item.username}</TableCell>\r\n              <TableCell className=\"text-right\">\r\n                {item.is_admin === true ? \"Admin\" : \"User\"}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default UserList;\r\n","import React from \"react\";\r\nimport { json, useRouteLoaderData } from \"react-router-dom\";\r\nimport UserList from \"../../components/UserComps/UserList\";\r\nimport { getAuthToken } from \"../../util/Auth\";\r\n\r\nfunction AllUsers() {\r\n  const users = useRouteLoaderData(\"users\");\r\n  return (\r\n    <React.Fragment>\r\n      <UserList users={users} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AllUsers;\r\n\r\nexport async function loader() {\r\n  const token = getAuthToken();\r\n\r\n  const response = await fetch(\"https://homes-test.onrender.com/user\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    },\r\n  });\r\n  if (response.status===400){\r\n    throw json({ message: \"Only the admin can view users\" }, { status: 400 });\r\n  }\r\n  if (!response.ok) {\r\n    throw json({ message: \"Cant get users\" }, { status: 500 });\r\n  } else {\r\n    const resData = await response.json();\r\n    return resData;\r\n  }\r\n}\r\n"],"names":["_ref","users","_useState","useState","_useState2","_slicedToArray","selectedNames","setSelectedNames","filteredUsers","filter","user","includes","first_name","length","_jsxs","React","children","_jsx","Flex","className","justifyContent","alignItems","Title","Icon","icon","InformationCircleIcon","variant","tooltip","MultiSelect","onValueChange","placeholder","map","item","MultiSelectItem","value","Select","defaultValue","SelectItem","type","PrinterIcon","Table","TableHead","TableRow","TableHeaderCell","TableBody","Link","to","concat","id","TableCell","last_name","username","is_admin","useRouteLoaderData","UserList","loader","_loader","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","response","resData","wrap","_context","prev","next","getAuthToken","fetch","method","headers","Authorization","sent","status","json","message","ok","abrupt","stop"],"sourceRoot":""}