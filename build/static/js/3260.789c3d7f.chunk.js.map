{"version":3,"file":"static/js/3260.789c3d7f.chunk.js","mappings":"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","sources":["components/LogsComps/AllLogs.js","pages/LogsPages/AllLogsPage.js","../node_modules/@heroicons/react/24/outline/esm/ChevronLeftIcon.js"],"sourcesContent":["import React from \"react\";\nimport { Link, useRouteLoaderData } from \"react-router-dom\";\nimport {\n  ChevronLeftIcon,\n  InformationCircleIcon,\n  PrinterIcon,\n} from \"@heroicons/react/24/outline\";\nimport {\n  Icon,\n  Table,\n  TableRow,\n  TableCell,\n  TableHead,\n  TableHeaderCell,\n  TableBody,\n  BadgeDelta,\n  Title,\n  Flex,\n  Select,\n  SelectItem,\n  MultiSelect,\n  MultiSelectItem,\n  DeltaType,\n  Card,\n  LineChart,\n} from \"@tremor/react\";\n\nfunction AllLogs({ logs }) {\n  const {resident} = useRouteLoaderData(\"resident-detail\");\n\n  const routeLoaderData = useRouteLoaderData(\"root\");\n  const { healthData } = routeLoaderData;\n\n  // Prepare the chart data\n  const chartData = logs.map((log) => ({\n    date: log.creation_date,\n    \"Heart Rate\": log.heart_rate,\n    \"Blood Pressure\": log.blood_pressure,\n    Weight: log.weight,\n  }));\n\n  return (\n    <React.Fragment>\n\n  <div  className=\"py-4\">\n          <Card >\n            <div>\n              <div className=\"font-bold text-lg\">{resident.first_name}{\"  \"}{resident.last_name} Vitals records</div>\n            <Title >  {\"  \"}Blood pressure, Heart Rate, and Weight Comparison</Title>\n            </div>\n            <LineChart\n              className=\"mt-6\"\n              data={chartData}\n              index=\"date\"\n              categories={[\"Heart Rate\", \"Blood Pressure\", \"Weight\"]}\n              colors={[\"emerald\", \"gray\", \"indigo\"]}\n              yAxisWidth={40}\n              />\n          </Card>\n        </div>\n      <div>\n        <Flex\n          className=\"space-x-0.5\"\n          justifyContent=\"start\"\n          alignItems=\"center\"\n        >\n          <Title>Logs</Title>\n          <Icon\n            icon={InformationCircleIcon}\n            variant=\"simple\"\n            tooltip=\"Shows log history\"\n          />\n        </Flex>\n      </div>\n      <div className=\"flex space-x-2\">\n        <MultiSelect\n          className=\"max-w-full sm:max-w-xs\"\n          placeholder=\"Search date...\"\n        >\n          {logs.map((item) => (\n            <MultiSelectItem\n              key={item.creation_date}\n              value={item.creation_date}\n            >\n              {item.creation_date}\n            </MultiSelectItem>\n          ))}\n        </MultiSelect>\n        <Select className=\"max-w-full sm:max-w-xs\" defaultValue=\"all\">\n          <SelectItem value=\"all\">All </SelectItem>\n          <SelectItem value=\"creation_date\">creation date</SelectItem>\n        </Select>\n        <Link to=\"..\">\n          <button\n            type=\"button\"\n            className=\"inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\"\n          >\n            <ChevronLeftIcon\n              className=\"-ml-0.5 mr-1.5 h-5 w-5 text-gray-400\"\n              aria-hidden=\"true\"\n            />\n            Back to Resident\n          </button>\n        </Link>\n        <button\n          type=\"button\"\n          className=\"inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\"\n        >\n          <PrinterIcon\n            className=\"-ml-0.5 mr-1.5 h-5 w-5 text-gray-400\"\n            aria-hidden=\"true\"\n          />\n          Export\n        </button>\n      </div>\n\n      <Table className=\"mt-6\">\n        <TableHead>\n          <TableRow>\n            <TableHeaderCell>Creation Date</TableHeaderCell>\n            <TableHeaderCell className=\"text-left\">B.P</TableHeaderCell>\n            <TableHeaderCell className=\"text-left\">Heart Rate</TableHeaderCell>\n            <TableHeaderCell className=\"text-left\">Weight</TableHeaderCell>\n            <TableHeaderCell className=\"text-left\">Voiding</TableHeaderCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {logs.map((log) => (\n            <TableRow key={log.id} className=\"hover:bg-white\">\n              <Link to={`./${log.id}`}>\n                <TableCell className=\"w-auto hover:text-indigo-600 hover:underline\">{log.creation_date}</TableCell>\n              </Link>\n              <TableCell className=\"text-left\">{log.blood_pressure}</TableCell>\n              <TableCell className=\"text-left\">{log.heart_rate}</TableCell>\n              <TableCell className=\"text-left\">{log.weight}</TableCell>\n              <TableCell className=\"text-left\">{log.voiding}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  );\n}\n\nexport default AllLogs;\n","import React from 'react'\nimport { getAuthToken } from '../../util/Auth';\nimport { json, useLoaderData, useRouteLoaderData } from 'react-router-dom';\nimport AllLogs from '../../components/LogsComps/AllLogs';\n\nfunction AllLogsPage() {\n    const logs = useRouteLoaderData(\"logs\")\n  return (\n    <React.Fragment>\n        <AllLogs logs={logs}/>\n    </React.Fragment>\n  )\n}\n\nexport default AllLogsPage\n\nexport async function loader({ request, params }) {\n    const id = params.id;\n    let url = \"https://homes-test.onrender.com/daily-records/\" + id ;\n    const token = getAuthToken();\n  \n    const response = await fetch(url, {\n      method: \"get\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    });\n    if (response.status === 404) {\n      return response;\n    }\n    if (response.status === 400) {\n      return response;\n    }\n    if (!response.ok) {\n      throw json({ message: \"Server error\" }, { status: 500 });\n    }\n  \n    const resData = await response.json();\n    console.log(resData);\n    return resData;\n  }","import * as React from \"react\";\nfunction ChevronLeftIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15.75 19.5L8.25 12l7.5-7.5\"\n  }));\n}\nconst ForwardRef = React.forwardRef(ChevronLeftIcon);\nexport default ForwardRef;"],"names":["_ref","logs","resident","useRouteLoaderData","chartData","healthData","map","log","date","creation_date","heart_rate","blood_pressure","Weight","weight","_jsxs","React","children","_jsx","className","Card","first_name","last_name","Title","LineChart","data","index","categories","colors","yAxisWidth","Flex","justifyContent","alignItems","Icon","icon","InformationCircleIcon","variant","tooltip","MultiSelect","placeholder","item","MultiSelectItem","value","Select","defaultValue","SelectItem","Link","to","type","ChevronLeftIcon","PrinterIcon","Table","TableHead","TableRow","TableHeaderCell","TableBody","concat","id","TableCell","voiding","AllLogs","loader","_x","_loader","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","url","token","response","resData","wrap","_context","prev","next","request","getAuthToken","fetch","method","headers","Authorization","sent","status","abrupt","ok","json","message","console","stop","ForwardRef","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d"],"sourceRoot":""}