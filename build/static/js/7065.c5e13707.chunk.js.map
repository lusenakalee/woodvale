{"version":3,"file":"static/js/7065.c5e13707.chunk.js","mappings":"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","sources":["webpack://woodvale/./src/components/UIComps/Modal.module.css?4635","components/UIComps/ModalComp.js","pages/LeavePages/CancelReturnResidentPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__5zCZI\",\"modal\":\"Modal_modal__R70HS\",\"slide-down\":\"Modal_slide-down__uWUnH\"};","import React from \"react\";\nimport classes from \"./Modal.module.css\";\nimport ReactDOM from \"react-dom\";\n\nfunction Backdrop(props) {\n  return <div className={classes.backdrop}></div>;\n}\n\nfunction ModalOverlays(props) {\n  return (\n    <div className={classes.modal}>\n      <div className={classes.content}>{props.children}</div>\n    </div>\n  );\n}\n\nconst portalElement = document.getElementById(\"overlays\");\n\nfunction Modal(props) {\n  return (\n    <React.Fragment>\n      {ReactDOM.createPortal(<Backdrop />, portalElement)}\n      {ReactDOM.createPortal(\n        <ModalOverlays>{props.children}</ModalOverlays>,\n        portalElement\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default Modal;\n","import React from 'react'\nimport { Form, json, redirect, useActionData, useNavigate, useNavigation } from 'react-router-dom';\nimport Modal from '../../components/UIComps/ModalComp';\nimport { getAuthToken } from '../../util/Auth';\n\nfunction CancelReturnResidentPage() {\n    const navigate = useNavigate();\n    const data = useActionData();\n    function cancelHandler() {\n      navigate(\"..\");\n    }\n    const navigation = useNavigation();\n    const isSubmitting = navigation.state === \"submitting\";\n  return (\n    <React.Fragment>\n    <Modal>\n    {data && data.errors && (\n      <ul>\n        {Object.values(data.errors).map((err) => (\n          <li key={err}>{err}</li>\n        ))}\n      </ul>\n    )}\n    {data && data.message && <p>{data.message}</p>}\n      <Form method=\"post\">\n        <p>Are you sure you want to cancel this resident's return?</p>\n        <div className=\"mt-6 flex items-center justify-end gap-x-6\">\n          <button\n            type=\"button\"\n            onClick={cancelHandler}\n            className=\"text-sm font-semibold leading-6 text-gray-900\"\n          >\n            No\n          </button>\n          <button\n            type=\"submit\"\n            disabled={isSubmitting}\n            className=\"rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n          >\n             {isSubmitting ? \"Rejecting\" : \"Yes\"}\n          </button>\n        </div>\n      </Form>\n    </Modal>\n  </React.Fragment>\n  )\n}\n\nexport default CancelReturnResidentPage\n\nexport async function action({ request, params }) {\n    let url = \"https://homes-test.onrender.com/leave-records/cancel/\";\n    const token = getAuthToken();\n    const id = params.leaveId;\n    const residentId = params.id;\n    const response = await fetch(url + id, {\n      method: \"post\",\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n    });\n    if (response.status === 400) {\n      return response;\n    }\n    if (response.status === 404) {\n      return response;\n    }\n    if (!response.ok) {\n      throw json({ message: \"Something went wrong!!\" }, { status: 500 });\n    }\n    return redirect(`/login/residents/${residentId}/leaves/${id}`);\n  }"],"names":["Backdrop","props","_jsx","className","classes","backdrop","ModalOverlays","modal","children","content","portalElement","document","getElementById","_jsxs","React","ReactDOM","action","_x","_action","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","params","token","id","residentId","response","wrap","_context","prev","next","request","getAuthToken","leaveId","fetch","method","headers","Authorization","sent","status","abrupt","ok","json","message","redirect","concat","stop","navigate","useNavigate","data","useActionData","isSubmitting","useNavigation","state","Modal","errors","Object","values","map","err","Form","type","onClick","disabled"],"sourceRoot":""}