{"version":3,"file":"static/js/4862.c435fd3f.chunk.js","mappings":"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","sources":["components/UserComps/UserList.js","pages/UserPages/AllUsers.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  InformationCircleIcon,\n  PrinterIcon,\n} from \"@heroicons/react/24/outline\";\nimport {\n  Icon,\n  Table,\n  TableRow,\n  TableCell,\n  TableHead,\n  TableHeaderCell,\n  TableBody,\n  Title,\n  Flex,\n  Select,\n  SelectItem,\n  MultiSelect,\n  MultiSelectItem,\n} from \"@tremor/react\";\n\nfunction UserList({ users }) {\n  \n\n\n\n\n  const [selectedNames, setSelectedNames] = useState([]);\n\n  const isUserSelected = (user) =>\n    selectedNames.includes(user.first_name) || selectedNames.length === 0;\n\n  const filteredUsers = users.filter(isUserSelected);\n\n  return (\n    <React.Fragment>\n      <div>\n        <Flex className=\"space-x-0.5\" justifyContent=\"start\" alignItems=\"center\">\n          <Title>Staff</Title>\n          <Icon\n            icon={InformationCircleIcon}\n            variant=\"simple\"\n            tooltip=\"Shows general staff information\"\n          />\n          <Title></Title>\n        </Flex>\n      </div>\n      <div className=\"flex space-x-2\">\n        <MultiSelect\n          className=\"max-w-full sm:max-w-xs\"\n          onValueChange={setSelectedNames}\n          placeholder=\"Search by name...\"\n        >\n          {users.map((item) => (\n            <MultiSelectItem key={item.first_name} value={item.first_name}>\n              {item.first_name}\n            </MultiSelectItem>\n          ))}\n        </MultiSelect>\n        <Select className=\"max-w-full sm:max-w-xs\" defaultValue=\"all\">\n          <SelectItem value=\"all\">All</SelectItem>\n          <SelectItem value=\"first_name\">First Name</SelectItem>\n          <SelectItem value=\"last_name\">Last Name</SelectItem>\n          <SelectItem value=\"username\">Username</SelectItem>\n        </Select>\n        <button\n          type=\"button\"\n          className=\"inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\"\n        >\n          <PrinterIcon className=\"-ml-0.5 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n          Export\n        </button>\n      </div>\n      <Table className=\"mt-6\">\n        <TableHead>\n          <TableRow>\n            <TableHeaderCell>First Name</TableHeaderCell>\n            <TableHeaderCell className=\"text-right\">Last Name</TableHeaderCell>\n            <TableHeaderCell className=\"text-right\">Username</TableHeaderCell>\n            <TableHeaderCell className=\"text-right\">User Type</TableHeaderCell>\n          </TableRow>\n        </TableHead>\n\n        <TableBody>\n          {filteredUsers.map((item) => (\n            <TableRow key={item.id} className=\"hover:bg-white\">\n             <TableCell className=\"w-auto hover:text-indigo-600 hover:underline\">\n                <Link to={`./${item.id}`}>{item.first_name}</Link>\n              </TableCell>\n              <TableCell className=\"text-right\">{item.last_name}</TableCell>\n              <TableCell className=\"text-right\">{item.username}</TableCell>\n              <TableCell className=\"text-right\">\n                {item.is_admin === true ? \"Admin\" : \"User\"}\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  );\n}\n\nexport default UserList;\n","import React from \"react\";\nimport { json, useRouteLoaderData } from \"react-router-dom\";\nimport UserList from \"../../components/UserComps/UserList\";\nimport { getAuthToken } from \"../../util/Auth\";\n\nfunction AllUsers() {\n  const users = useRouteLoaderData(\"users\");\n  return (\n    <React.Fragment>\n      <UserList users={users} />\n    </React.Fragment>\n  );\n}\n\nexport default AllUsers;\n\nexport async function loader() {\n  const token = getAuthToken();\n\n  const response = await fetch(\"https://homes-test.onrender.com/user\", {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n  });\n  if (response.status===400){\n    throw json({ message: \"Only the admin can view users\" }, { status: 400 });\n  }\n  if (!response.ok) {\n    throw json({ message: \"Cant get users\" }, { status: 500 });\n  } else {\n    const resData = await response.json();\n    return resData;\n  }\n}\n"],"names":["_ref","users","_useState","useState","_useState2","_slicedToArray","selectedNames","setSelectedNames","filteredUsers","filter","user","includes","first_name","length","_jsxs","React","children","_jsx","Flex","className","justifyContent","alignItems","Title","Icon","icon","InformationCircleIcon","variant","tooltip","MultiSelect","onValueChange","placeholder","map","item","MultiSelectItem","value","Select","defaultValue","SelectItem","type","PrinterIcon","Table","TableHead","TableRow","TableHeaderCell","TableBody","TableCell","Link","to","concat","id","last_name","username","is_admin","useRouteLoaderData","UserList","loader","_loader","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","response","resData","wrap","_context","prev","next","getAuthToken","fetch","method","headers","Authorization","sent","status","json","message","ok","abrupt","stop"],"sourceRoot":""}