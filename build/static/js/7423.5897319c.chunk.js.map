{"version":3,"file":"static/js/7423.5897319c.chunk.js","mappings":"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","sources":["components/UserComps/UserForm.js","pages/UserPages/UserEditPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Form,\n  json,\n  redirect,\n  useNavigate,\n  useNavigation,\n} from \"react-router-dom\";\nimport { getAuthToken } from \"../../util/Auth\";\n\nfunction UserForm({ method, user, title }) {\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const handleOptionChange = (e) => {\n    setSelectedOption(e.target.value);\n  };\n\n  const isSubmitting = navigation.state === \"submitting\";\n  function cancelHandler() {\n    navigate(\"..\");\n  }\n\n  return (\n    <React.Fragment>\n      <Form method={method}>\n        <div className=\"space-y-12\">\n          <div className=\"border-b border-gray-900/10 pb-12\">\n            <p className=\"mt-1 text-sm leading-6 text-gray-600\">\n              Kindly fill in correct details\n            </p>\n\n            <div className=\"mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6\">\n              <div className=\"sm:col-span-3\">\n                <label\n                  htmlFor=\"first-name\"\n                  className=\"block text-sm font-medium leading-6 text-gray-900\"\n                >\n                  First name\n                </label>\n                <div className=\"mt-2\">\n                  <input\n                    type=\"text\"\n                    name=\"first_name\"\n                    id=\"first-name\"\n                    autoComplete=\"given-name\"\n                    required\n                    defaultValue={user ? user.first_name : \" \"}\n                    className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"sm:col-span-3\">\n                <label\n                  htmlFor=\"last_name\"\n                  className=\"block text-sm font-medium leading-6 text-gray-900\"\n                >\n                  Last name\n                </label>\n                <div className=\"mt-2\">\n                  <input\n                    type=\"text\"\n                    name=\"last_name\"\n                    id=\"last_name\"\n                    autoComplete=\"family-name\"\n                    required\n                    defaultValue={user ? user.last_name : \" \"}\n                    className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"sm:col-span-3\">\n                <label\n                  htmlFor=\"username\"\n                  className=\"block text-sm font-medium leading-6 text-gray-900\"\n                >\n                  Set user name\n                </label>\n                <div className=\"mt-2\">\n                  <input\n                    type=\"email\"\n                    name=\"username\"\n                    id=\"username\"\n                    required\n                    autoComplete=\"family-name\"\n                    defaultValue={user ? user.username : \" \"}\n                    className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"sm:col-span-3\">\n                <label\n                  htmlFor=\"password1\"\n                  className=\"block text-sm font-medium leading-6 text-gray-900\"\n                >\n                  Set password\n                </label>\n                <div className=\"mt-2\">\n                  <input\n                    type=\"text\"\n                    required\n                    name=\"password1\"\n                    id=\"password1\"\n                    className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"sm:col-span-3\">\n                <label\n                  htmlFor=\"password2\"\n                  className=\"block text-sm font-medium leading-6 text-gray-900\"\n                >\n                  Confirm password\n                </label>\n                <div className=\"mt-2\">\n                  <input\n                    type=\"text\"\n                    name=\"password2\"\n                    required\n                    id=\"password2\"\n                    className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"mt-10 space-y-10 space-x-5\">\n              <fieldset  className=\"mt-10 space-y-10 space-x-5\">\n                <legend className=\"text-sm font-semibold leading-6 text-gray-900\">\n                  Is the user you are adding an Admin?\n                </legend>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"is-admin\"\n                    value=\"true\"\n                    checked={selectedOption === \"true\"}\n                    onChange={handleOptionChange}\n                  />\n                  True\n                </label>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"is-admin\"\n                    value=\"false\"\n                    checked={selectedOption === \"false\"}\n                    onChange={handleOptionChange}\n                  />\n                  False\n                </label>\n              </fieldset>\n            </div>\n          </div>\n\n          <div className=\"flex justify-between sm:col-span-4\">\n            <button\n              onClick={cancelHandler}\n              className=\"px-4 py-2 text-sm font-medium text-gray-900 bg-blue-500 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              Back\n            </button>\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"px-4 py-2 text-sm font-medium text-gray-900 bg-blue-500 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              {isSubmitting ? \"Submitting...\" : \"Save\"}\n            </button>\n          </div>\n        </div>\n      </Form>\n    </React.Fragment>\n  );\n}\n\nexport default UserForm;\nexport async function action({ request, params }) {\n  const data = await request.formData();\n  const method = request.method;\n  const token = getAuthToken();\n  const signupData = {\n    username: data.get(\"username\"),\n    password1: data.get(\"password1\"),\n    password2: data.get(\"password2\"),\n    first_name: data.get(\"first_name\"),\n    last_name: data.get(\"last_name\"),\n    is_admin: data.get(\"is-admin\"), //boolean field should be a dropdown of true or false\n  };\n  const response = await fetch(\"https://homes-test.onrender.com/user\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      Authorization: \"Bearer \" + token,\n    },\n    body: JSON.stringify(signupData),\n  });\n  if (response.status === 409) {\n    return response;\n  }\n\n  if (response.status === 417) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({ message: \"Could not register user\" }, { status: 500 });\n  }\n\n  return redirect(\"/login/team\");\n}\n","import React from 'react'\nimport { useRouteLoaderData } from 'react-router-dom'\nimport UserForm from '../../components/UserComps/UserForm'\n\nfunction UserEditPage() {\n    const user = useRouteLoaderData('user-detail')\n  return (\n    <React.Fragment>\n        <UserForm user={user} method=\"patch\"/>\n    </React.Fragment>\n  )\n}\n\nexport default UserEditPage"],"names":["action","_x","_action","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","request","data","token","signupData","response","wrap","_context","prev","next","params","formData","sent","method","getAuthToken","username","get","password1","password2","first_name","last_name","is_admin","fetch","headers","Authorization","body","JSON","stringify","status","abrupt","ok","json","message","redirect","stop","_ref","user","navigate","title","useNavigate","navigation","useNavigation","_useState","useState","_useState2","_slicedToArray","selectedOption","setSelectedOption","handleOptionChange","e","target","value","isSubmitting","state","_jsx","React","children","Form","_jsxs","className","htmlFor","type","name","id","autoComplete","required","defaultValue","checked","onChange","onClick","disabled","useRouteLoaderData","UserForm"],"sourceRoot":""}