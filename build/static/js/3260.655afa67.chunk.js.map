{"version":3,"file":"static/js/3260.655afa67.chunk.js","mappings":"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","sources":["components/LogsComps/AllLogs.js","pages/LogsPages/AllLogsPage.js","../node_modules/@heroicons/react/24/outline/esm/ChevronLeftIcon.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, useRouteLoaderData } from \"react-router-dom\";\r\nimport {\r\n  ChevronLeftIcon,\r\n  InformationCircleIcon,\r\n  PrinterIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport {\r\n  Icon,\r\n  Table,\r\n  TableRow,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeaderCell,\r\n  TableBody,\r\n  BadgeDelta,\r\n  Title,\r\n  Flex,\r\n  Select,\r\n  SelectItem,\r\n  MultiSelect,\r\n  MultiSelectItem,\r\n  DeltaType,\r\n  Card,\r\n  LineChart,\r\n} from \"@tremor/react\";\r\nimport Papa from \"papaparse\";\r\n\r\nfunction AllLogs({ logs }) {\r\n  const { resident } = useRouteLoaderData(\"resident-detail\");\r\n  const [selectedLogDate, setSelectedLogDate] = useState([]);\r\n\r\n  const isLogSelected = (log) =>\r\n    selectedLogDate.includes(log.creation_date) || selectedLogDate.length === 0;\r\n\r\n  const filteredLogs = logs.filter(isLogSelected);\r\n\r\n  const routeLoaderData = useRouteLoaderData(\"root\");\r\n  const { healthData } = routeLoaderData;\r\n\r\n  const handleExportCSV = () => {\r\n    const csvData = Papa.unparse(filteredLogs);\r\n    const blob = new Blob([csvData], { type: \"text/csv;charset=utf-8;\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", url);\r\n    link.setAttribute(\"download\", \"logs.csv\");\r\n    link.style.visibility = \"hidden\";\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n  // Prepare the chart data\r\n  const chartData = logs.map((log) => ({\r\n    date: log.creation_date,\r\n    \"Heart Rate\": log.heart_rate,\r\n    \"Blood Pressure\": log.blood_pressure,\r\n    Weight: log.weight,\r\n  }));\r\n\r\n\r\n  const LOGS_PER_PAGE = 10; // Set the number to display per page\r\n  const [currentPage, setCurrentPage] = useState(1); // Current page number\r\n    // Calculate pagination\r\n    const totalLogs = filteredLogs.length;\r\n    const totalPages = Math.ceil(totalLogs / LOGS_PER_PAGE);\r\n  \r\n    // Get the slice to display based on the current page\r\n    const startIndex = (currentPage - 1) * LOGS_PER_PAGE;\r\n    const endIndex = startIndex + LOGS_PER_PAGE;\r\n    const logsToShow = filteredLogs.slice(startIndex, endIndex);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"py-4\">\r\n        <Card>\r\n          <div>\r\n            <div className=\"font-bold text-lg\">\r\n              {resident.first_name}\r\n              {\"  \"}\r\n              {resident.last_name} Vitals records\r\n            </div>\r\n            <Title>\r\n              {\" \"}\r\n              {\"  \"}Blood pressure, Heart Rate, and Weight Comparison\r\n            </Title>\r\n          </div>\r\n          <LineChart\r\n            className=\"mt-6\"\r\n            data={chartData}\r\n            index=\"date\"\r\n            categories={[\"Heart Rate\", \"Blood Pressure\", \"Weight\"]}\r\n            colors={[\"emerald\", \"gray\", \"indigo\"]}\r\n            yAxisWidth={40}\r\n          />\r\n        </Card>\r\n      </div>\r\n      <div>\r\n        <Flex\r\n          className=\"space-x-0.5\"\r\n          justifyContent=\"start\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Title>Logs</Title>\r\n          <Icon\r\n            icon={InformationCircleIcon}\r\n            variant=\"simple\"\r\n            tooltip=\"Shows log history\"\r\n          />\r\n        </Flex>\r\n      </div>\r\n      <div className=\"flex space-x-2\">\r\n        <MultiSelect\r\n          className=\"max-w-full sm:max-w-xs\"\r\n          onValueChange={setSelectedLogDate}\r\n          placeholder=\"Search date...\"\r\n        >\r\n          {logs.map((item) => (\r\n            <MultiSelectItem\r\n              key={item.creation_date}\r\n              value={item.creation_date}\r\n            >\r\n              {item.creation_date}\r\n            </MultiSelectItem>\r\n          ))}\r\n        </MultiSelect>\r\n\r\n        <Link to=\"..\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\"\r\n          >\r\n            <ChevronLeftIcon\r\n              className=\"-ml-0.5 mr-1.5 h-5 w-5 text-gray-400\"\r\n              aria-hidden=\"true\"\r\n            />\r\n            Back to Resident\r\n          </button>\r\n        </Link>\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleExportCSV}\r\n          className=\"inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\"\r\n        >\r\n          <PrinterIcon\r\n            className=\"-ml-0.5 mr-1.5 h-5 w-5 text-gray-400\"\r\n            aria-hidden=\"true\"\r\n          />\r\n          Export\r\n        </button>\r\n      </div>\r\n\r\n      <Table className=\"mt-6 pb-24\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableHeaderCell>Creation Date</TableHeaderCell>\r\n            <TableHeaderCell className=\"text-left\">B.P</TableHeaderCell>\r\n            <TableHeaderCell className=\"text-left\">Heart Rate</TableHeaderCell>\r\n            <TableHeaderCell className=\"text-left\">Weight</TableHeaderCell>\r\n            <TableHeaderCell className=\"text-left\">Voiding</TableHeaderCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {logsToShow.map((log) => (\r\n            <TableRow key={log.id} className=\"hover:bg-white\">\r\n              <Link to={`./${log.id}`}>\r\n                <TableCell className=\"w-auto hover:text-indigo-600 hover:underline\">\r\n                  {log.creation_date}\r\n                </TableCell>\r\n              </Link>\r\n              <TableCell className=\"text-left\">{log.blood_pressure}</TableCell>\r\n              <TableCell className=\"text-left\">{log.heart_rate}</TableCell>\r\n              <TableCell className=\"text-left\">{log.weight}</TableCell>\r\n              <TableCell className=\"text-left\">{log.voiding}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n\r\n\r\n       {/* Pagination */}\r\n       <ol className=\"flex justify-center pb-24 gap-1 text-xs font-medium mt-4\">\r\n        {currentPage > 1 && (\r\n          <li>\r\n            <a\r\n              href=\"#\"\r\n              onClick={() => setCurrentPage((prev) => prev - 1)}\r\n              className=\"inline-flex h-8 w-8 items-center justify-center rounded border border-gray-100 bg-white text-gray-900 rtl:rotate-180\"\r\n            >\r\n              <span className=\"sr-only\">Prev Page</span>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"h-3 w-3\"\r\n                viewBox=\"0 0 20 20\"\r\n                fill=\"currentColor\"\r\n              >\r\n                <path\r\n                  fillRule=\"evenodd\"\r\n                  d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\r\n                  clipRule=\"evenodd\"\r\n                />\r\n              </svg>\r\n            </a>\r\n          </li>\r\n        )}\r\n\r\n        {Array.from({ length: totalPages }, (_, index) => index + 1).map(\r\n          (pageNum) => (\r\n            <li key={pageNum}>\r\n              <a\r\n                href=\"#\"\r\n                onClick={() => setCurrentPage(pageNum)}\r\n                className={`${\r\n                  pageNum === currentPage\r\n                    ? \"block h-8 w-8 rounded border-blue-600 bg-indigo-600 text-center leading-8 text-white\"\r\n                    : \"block h-8 w-8 rounded border border-gray-100 bg-white text-center leading-8 text-gray-900\"\r\n                }`}\r\n              >\r\n                {pageNum}\r\n              </a>\r\n            </li>\r\n          )\r\n        )}\r\n\r\n        {currentPage < totalPages && (\r\n          <li>\r\n            <a\r\n              href=\"#\"\r\n              onClick={() => setCurrentPage((prev) => prev + 1)}\r\n              className=\"inline-flex h-8 w-8 items-center justify-center rounded border border-gray-100 bg-white text-gray-900 rtl:rotate-180\"\r\n            >\r\n              <span className=\"sr-only\">Next Page</span>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"h-3 w-3\"\r\n                viewBox=\"0 0 20 20\"\r\n                fill=\"currentColor\"\r\n              >\r\n                <path\r\n                  fillRule=\"evenodd\"\r\n                  d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n                  clipRule=\"evenodd\"\r\n                />\r\n              </svg>\r\n            </a>\r\n          </li>\r\n        )}\r\n      </ol>\r\n\r\n\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AllLogs;\r\n","import React from 'react'\r\nimport { getAuthToken } from '../../util/Auth';\r\nimport { json, useLoaderData, useRouteLoaderData } from 'react-router-dom';\r\nimport AllLogs from '../../components/LogsComps/AllLogs';\r\n\r\nfunction AllLogsPage() {\r\n    const logs = useRouteLoaderData(\"logs\")\r\n  return (\r\n    <React.Fragment>\r\n        <AllLogs logs={logs}/>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default AllLogsPage\r\n\r\nexport async function loader({ request, params }) {\r\n    const id = params.id;\r\n    let url = \"https://woodvale-test-2.onrender.com/daily-records/\" + id ;\r\n    const token = getAuthToken();\r\n  \r\n    const response = await fetch(url, {\r\n      method: \"get\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    });\r\n    if (response.status === 404) {\r\n      return response;\r\n    }\r\n    if (response.status === 400) {\r\n      return response;\r\n    }\r\n    if (!response.ok) {\r\n      throw json({ message: \"Server error\" }, { status: 500 });\r\n    }\r\n  \r\n    const resData = await response.json();\r\n    ;\r\n    return resData;\r\n  }","import * as React from \"react\";\nfunction ChevronLeftIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15.75 19.5L8.25 12l7.5-7.5\"\n  }));\n}\nconst ForwardRef = React.forwardRef(ChevronLeftIcon);\nexport default ForwardRef;"],"names":["_ref","logs","resident","useRouteLoaderData","_useState","useState","_useState2","_slicedToArray","selectedLogDate","setSelectedLogDate","filteredLogs","filter","log","includes","creation_date","length","chartData","healthData","map","date","heart_rate","blood_pressure","Weight","weight","_useState3","_useState4","currentPage","setCurrentPage","totalLogs","totalPages","Math","ceil","startIndex","endIndex","logsToShow","slice","_jsxs","React","children","_jsx","className","Card","first_name","last_name","Title","LineChart","data","index","categories","colors","yAxisWidth","Flex","justifyContent","alignItems","Icon","icon","InformationCircleIcon","variant","tooltip","MultiSelect","onValueChange","placeholder","item","MultiSelectItem","value","Link","to","type","ChevronLeftIcon","onClick","csvData","Papa","blob","Blob","url","URL","createObjectURL","link","document","createElement","setAttribute","style","visibility","body","appendChild","click","removeChild","PrinterIcon","Table","TableHead","TableRow","TableHeaderCell","TableBody","concat","id","TableCell","voiding","href","prev","xmlns","viewBox","fill","fillRule","d","clipRule","Array","from","_","pageNum","AllLogs","loader","_x","_loader","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","token","response","resData","wrap","_context","next","request","getAuthToken","fetch","method","headers","Authorization","sent","status","abrupt","ok","json","message","stop","ForwardRef","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","Object","assign","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin"],"sourceRoot":""}