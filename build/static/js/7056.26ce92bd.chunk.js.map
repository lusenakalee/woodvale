{"version":3,"file":"static/js/7056.26ce92bd.chunk.js","mappings":"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","sources":["webpack://woodvale/./src/components/UIComps/Modal.module.css?4635","components/UIComps/ModalComp.js","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","pages/RootPages/RequestDemoPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__5zCZI\",\"modal\":\"Modal_modal__R70HS\",\"slide-down\":\"Modal_slide-down__uWUnH\"};","import React from \"react\";\nimport classes from \"./Modal.module.css\";\nimport ReactDOM from \"react-dom\";\n\nfunction Backdrop(props) {\n  return <div className={classes.backdrop}></div>;\n}\n\nfunction ModalOverlays(props) {\n  return (\n    <div className={classes.modal}>\n      <div className={classes.content}>{props.children}</div>\n    </div>\n  );\n}\n\nconst portalElement = document.getElementById(\"overlays\");\n\nfunction Modal(props) {\n  return (\n    <React.Fragment>\n      {ReactDOM.createPortal(<Backdrop />, portalElement)}\n      {ReactDOM.createPortal(\n        <ModalOverlays>{props.children}</ModalOverlays>,\n        portalElement\n      )}\n    </React.Fragment>\n  );\n}\n\nexport default Modal;\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.11.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import Modal from \"../../components/UIComps/ModalComp\";\nimport {\n  Form,\n  json,\n  redirect,\n  useActionData,\n  useNavigate,\n  useNavigation,\n} from \"react-router-dom\";\nimport { getAuthToken } from \"../../util/Auth\";\nimport React, { useRef } from \"react\";\n\nimport emailjs from \"@emailjs/browser\";\n\nfunction RequestDemoPage() {\n  const navigate = useNavigate();\n  const data = useActionData();\n  function cancelHandler() {\n    navigate(\"..\");\n  }\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === \"submitting\";\n  const form = useRef();\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n\n    emailjs\n      .sendForm(\n        \"service_xdsx337\",\n        \"template_h0bx0qf\",\n        form.current,\n        \"FBkV-qTMZeXtxWnTa\"\n      )\n      .then(\n        (result) => {\n          console.log(result.text);\n          navigate(\"..\")\n        },\n        (error) => {\n          console.log(error.text);\n        }\n      );\n  };\n\n  return (\n    <React.Fragment>\n      <Modal>\n        <form ref={form} onSubmit={sendEmail}>\n          <div>\n            <h2 className=\"text-base font-semibold leading-7 text-gray-900\">\n              Demo request form\n            </h2>\n            <p className=\"mt-1 text-sm leading-6 text-gray-600\">\n              You will receive an email shortly after filling tin this form with\n              access logins to your demo account.\n            </p>\n          </div>\n          <div className=\"mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6\">\n            <div className=\"sm:col-span-3\">\n              <label\n                htmlFor=\"first-name\"\n                className=\"block text-sm font-medium leading-6 text-gray-900\"\n              >\n                First name\n              </label>\n              <div className=\"mt-2\">\n                <input\n                  type=\"text\"\n                  name=\"first-name\"\n                  id=\"first-name\"\n                  autoComplete=\"given-name\"\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                />\n              </div>\n            </div>\n\n            <div className=\"sm:col-span-3\">\n              <label\n                htmlFor=\"last-name\"\n                className=\"block text-sm font-medium leading-6 text-gray-900\"\n              >\n                Last name\n              </label>\n              <div className=\"mt-2\">\n                <input\n                  type=\"text\"\n                  name=\"last-name\"\n                  id=\"last-name\"\n                  autoComplete=\"family-name\"\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                />\n              </div>\n            </div>\n\n            <div className=\"sm:col-span-4\">\n              <label\n                htmlFor=\"email\"\n                className=\"block text-sm font-medium leading-6 text-gray-900\"\n              >\n                Email address\n              </label>\n              <div className=\"mt-2\">\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                />\n              </div>\n            </div>\n            <div className=\"sm:col-span-4\">\n              <label className=\"block text-sm font-medium leading-6 text-gray-900\">\n                Company/Institution (optional*)\n              </label>\n              <div className=\"mt-2\">\n                <input\n                  id=\"company\"\n                  name=\"company\"\n                  type=\"text\"\n                  className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"mt-6 flex items-center justify-end gap-x-6\">\n            <button\n              type=\"button\"\n              onClick={cancelHandler}\n              className=\"text-sm font-semibold leading-6 text-gray-900\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              value=\"Send\"\n              disabled={isSubmitting}\n              className=\"rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\n            >\n              {isSubmitting ? \"Accessing\" : \"Get Access\"}\n            </button>\n          </div>\n        </form>\n      </Modal>\n    </React.Fragment>\n  );\n}\n\nexport default RequestDemoPage;\n"],"names":["Backdrop","props","_jsx","className","classes","backdrop","ModalOverlays","modal","children","content","portalElement","document","getElementById","_jsxs","React","ReactDOM","store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","_createClass","httpResponse","_classCallCheck","this","status","text","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","target","responseStatus","_ref2","open","Object","keys","forEach","key","setRequestHeader","send","form","uID","_userID","currentForm","querySelector","nodeName","findHTMLForm","formData","FormData","append","navigate","useNavigate","useActionData","isSubmitting","useNavigation","state","useRef","Modal","ref","onSubmit","e","preventDefault","emailjs","current","then","result","console","log","error","htmlFor","type","name","id","autoComplete","onClick","value","disabled"],"sourceRoot":""}