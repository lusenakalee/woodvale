{"version":3,"file":"static/js/8808.3d64c42f.chunk.js","mappings":"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","sources":["components/ActivityComps/ActivityForm.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Form,\r\n  json,\r\n  redirect,\r\n  useActionData,\r\n  useNavigate,\r\n  useNavigation,\r\n} from \"react-router-dom\";\r\nimport { getAuthToken } from \"../../util/Auth\";\r\n\r\nfunction ActivityForm({ activity, method, title }) {\r\n  const navigate = useNavigate();\r\n  const navigation = useNavigation();\r\n  const data = useActionData();\r\n  const isSubmitting = navigation.state === \"submitting\";\r\n  function cancelHandler() {\r\n    navigate(\"..\");\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {title}\r\n      <Form method={method}>\r\n        <div className=\"mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6\">\r\n          <div className=\"sm:col-span-3\">\r\n            <label\r\n              htmlFor=\"first-name\"\r\n              className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n            >\r\n              Activity name\r\n            </label>\r\n            <div className=\"mt-2\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                required\r\n                id=\"first-name\"\r\n                autoComplete=\"given-name\"\r\n                defaultValue={activity ? activity.name : \"\"}\r\n                className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-span-full\">\r\n            <label\r\n              htmlFor=\"about\"\r\n              className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n            >\r\n              Activity description\r\n            </label>\r\n            <div className=\"mt-2\">\r\n              <textarea\r\n                id=\"about\"\r\n                name=\"description\"\r\n                required\r\n                rows={3}\r\n                className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n                defaultValue={activity ? activity.description : \"\"}\r\n              />\r\n            </div>\r\n            <p className=\"mt-3 text-sm leading-6 text-gray-600\">\r\n              Write a few sentences about the activity.\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"sm:col-span-3\">\r\n            <label\r\n              htmlFor=\"date\"\r\n              className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n            >\r\n              Event Date\r\n            </label>\r\n            <div className=\"mt-2\">\r\n              <input\r\n                id=\"date\"\r\n                name=\"event_date\"\r\n                type=\"date\"\r\n                required\r\n                defaultValue={activity ? activity.event_date : \"\"}\r\n                className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:max-w-xs sm:text-sm sm:leading-6\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          \r\n\r\n          <div className=\"flex justify-between sm:col-span-4\">\r\n            <button\r\n              onClick={cancelHandler}\r\n              className=\"px-4 py-2 text-sm font-medium text-gray-900 bg-blue-500 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              Back\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              disabled={isSubmitting}\r\n              className=\"px-4 py-2 text-sm font-medium text-gray-900 bg-blue-500 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              {isSubmitting ? \"Submitting...\" : \"Save\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ActivityForm;\r\n\r\nexport async function action({ request, params }) {\r\n  const method = request.method;\r\n  const data = await request.formData();\r\n  const token = getAuthToken();\r\n\r\n  const activityData = {\r\n    name: data.get(\"name\"),\r\n    description: data.get(\"description\"),\r\n    event_date: data.get(\"event_date\"),\r\n  };\r\n  let url = \"https://homes-test.onrender.com/activity\";\r\n  if (method === \"POST\") {\r\n    const response = await fetch(url, {\r\n      method: method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n      body: JSON.stringify(activityData),\r\n    });\r\n    if (response.status === 400) {\r\n      return response;\r\n    }\r\n    if (!response.ok) {\r\n      throw json({ message: \"Failed to save the activity\" }, { status: 500 });\r\n    }\r\n\r\n    return redirect(\"/login/activity\");\r\n  } else {\r\n    const id = params.id;\r\n    url = \"/activity/\" + id;\r\n    const response = await fetch(url, {\r\n      method: method,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + token,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n      body: JSON.stringify(activityData),\r\n    });\r\n    if (!response.ok) {\r\n      window.alert(\"failed update\");\r\n      throw json({ message: \"Failed to update the activity\" }, { status: 500 });\r\n    }\r\n\r\n    return redirect(\"/login/activity\");\r\n  }\r\n}\r\n"],"names":["action","_x","_action","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","request","params","method","data","token","activityData","url","response","id","wrap","_context","prev","next","formData","sent","getAuthToken","name","get","description","event_date","fetch","headers","Authorization","body","JSON","stringify","status","abrupt","ok","json","message","redirect","window","alert","stop","_ref","activity","title","navigate","useNavigate","navigation","useNavigation","isSubmitting","useActionData","state","_jsxs","React","children","_jsx","Form","className","htmlFor","type","required","autoComplete","defaultValue","rows","onClick","disabled"],"sourceRoot":""}