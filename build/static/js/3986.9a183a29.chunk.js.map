{"version":3,"file":"static/js/3986.9a183a29.chunk.js","mappings":"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","sources":["components/UserComps/UserForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Form,\n  json,\n  redirect,\n  useActionData,\n  useNavigate,\n  useNavigation,\n} from \"react-router-dom\";\nimport { getAuthToken } from \"../../util/Auth\";\n\nfunction UserForm({ method, user, title }) {\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n  const [selectedOption, setSelectedOption] = useState(null);\n  const data = useActionData();\n  const handleOptionChange = (e) => {\n    setSelectedOption(e.target.value);\n  };\n\n  const isSubmitting = navigation.state === \"submitting\";\n  function cancelHandler() {\n    navigate(\"..\");\n  }\n\n  return (\n    <React.Fragment>\n      <Form method={method}>\n        <div className=\"space-y-12\">\n          <div className=\"border-b border-gray-900/10 pb-12\">\n            <p className=\"mt-1 text-sm leading-6 text-gray-600\">\n              Kindly fill in correct details\n            </p>\n            {data && data.errors && (\n              <ul>\n                {Object.values(data.errors).map((err) => (\n                  <li key={err}>{err}</li>\n                ))}\n              </ul>\n            )}\n            {data && data.message && <p>{data.message}</p>}\n            <div className=\"mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6\">\n              <div className=\"sm:col-span-3\">\n                <label\n                  htmlFor=\"first-name\"\n                  className=\"block text-sm font-medium leading-6 text-gray-900\"\n                >\n                  First name\n                </label>\n                <div className=\"mt-2\">\n                  <input\n                    type=\"text\"\n                    name=\"first_name\"\n                    id=\"first-name\"\n                    autoComplete=\"given-name\"\n                    required\n                    defaultValue={user ? user.first_name : \" \"}\n                    className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"sm:col-span-3\">\n                <label\n                  htmlFor=\"last_name\"\n                  className=\"block text-sm font-medium leading-6 text-gray-900\"\n                >\n                  Last name\n                </label>\n                <div className=\"mt-2\">\n                  <input\n                    type=\"text\"\n                    name=\"last_name\"\n                    id=\"last_name\"\n                    autoComplete=\"family-name\"\n                    required\n                    defaultValue={user ? user.last_name : \" \"}\n                    className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"sm:col-span-3\">\n                <label\n                  htmlFor=\"username\"\n                  className=\"block text-sm font-medium leading-6 text-gray-900\"\n                >\n                  Set user name\n                </label>\n                <div className=\"mt-2\">\n                  <input\n                    type=\"email\"\n                    name=\"username\"\n                    id=\"username\"\n                    required\n                    autoComplete=\"family-name\"\n                    defaultValue={user ? user.username : \" \"}\n                    className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"sm:col-span-3\">\n                <label\n                  htmlFor=\"password1\"\n                  className=\"block text-sm font-medium leading-6 text-gray-900\"\n                >\n                  Set password\n                </label>\n                <div className=\"mt-2\">\n                  <input\n                    type=\"text\"\n                    required\n                    name=\"password1\"\n                    id=\"password1\"\n                    className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"sm:col-span-3\">\n                <label\n                  htmlFor=\"password2\"\n                  className=\"block text-sm font-medium leading-6 text-gray-900\"\n                >\n                  Confirm password\n                </label>\n                <div className=\"mt-2\">\n                  <input\n                    type=\"text\"\n                    name=\"password2\"\n                    required\n                    id=\"password2\"\n                    className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"mt-10 space-y-10 space-x-5\">\n              <fieldset className=\"mt-10 space-y-10 space-x-5\">\n                <legend className=\"text-sm font-semibold leading-6 text-gray-900\">\n                  Is the user you are adding an Admin?\n                </legend>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"is-admin\"\n                    value=\"true\"\n                    checked={selectedOption === \"true\"}\n                    onChange={handleOptionChange}\n                  />\n                  True\n                </label>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"is-admin\"\n                    value=\"false\"\n                    checked={selectedOption === \"false\"}\n                    onChange={handleOptionChange}\n                  />\n                  False\n                </label>\n              </fieldset>\n            </div>\n          </div>\n\n          <div className=\"flex justify-between sm:col-span-4\">\n            <button\n              onClick={cancelHandler}\n              className=\"px-4 py-2 text-sm font-medium text-gray-900 bg-blue-500 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              Back\n            </button>\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"px-4 py-2 text-sm font-medium text-gray-900 bg-blue-500 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              {isSubmitting ? \"Submitting...\" : \"Save\"}\n            </button>\n          </div>\n        </div>\n      </Form>\n    </React.Fragment>\n  );\n}\n\nexport default UserForm;\nexport async function action({ request, params }) {\n  const data = await request.formData();\n  const method = request.method;\n  const token = getAuthToken();\n  const signupData = {\n    username: data.get(\"username\"),\n    password1: data.get(\"password1\"),\n    password2: data.get(\"password2\"),\n    first_name: data.get(\"first_name\"),\n    last_name: data.get(\"last_name\"),\n    is_admin: data.get(\"is-admin\"), //boolean field should be a dropdown of true or false\n  };\n  if (method === \"POST\") {\n    const response = await fetch(\"https://woodvale-test-2.onrender.com/user\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        Authorization: \"Bearer \" + token,\n      },\n      body: JSON.stringify(signupData),\n    });\n    if (response.status === 409) {\n      return response;\n    }\n\n    if (response.status === 417) {\n      return response;\n    }\n    if (!response.ok) {\n      throw json({ message: \"Could not register user\" }, { status: 500 });\n    }\n\n    return redirect(\"/login/team\");\n  } else {\n    const id = params.id;\n    const response = await fetch(\"https://woodvale-test-2.onrender.com/user/\" + id, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        Authorization: \"Bearer \" + token,\n      },\n      body: JSON.stringify(signupData),\n    });\n    if (response.status === 409) {\n      return response;\n    }\n\n    if (response.status === 417) {\n      return response;\n    }\n    if (!response.ok) {\n      throw json({ message: \"Could not update user\" }, { status: 500 });\n    }\n\n    return redirect(\"/login/team\");\n  }\n}\n"],"names":["action","_x","_action","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","request","params","data","method","token","signupData","response","id","_response","wrap","_context","prev","next","formData","sent","getAuthToken","username","get","password1","password2","first_name","last_name","is_admin","fetch","headers","Authorization","body","JSON","stringify","status","abrupt","ok","json","message","redirect","stop","_ref","user","navigate","title","useNavigate","navigation","useNavigation","_useState","useState","_useState2","_slicedToArray","selectedOption","setSelectedOption","useActionData","handleOptionChange","e","target","value","isSubmitting","state","_jsx","React","children","Form","_jsxs","className","errors","Object","values","map","err","htmlFor","type","name","autoComplete","required","defaultValue","checked","onChange","onClick","disabled"],"sourceRoot":""}