{"version":3,"file":"static/js/2104.a97fae3c.chunk.js","mappings":"gRAoFA,MA7DA,SAAsBA,GAAiB,IAAdC,EAASD,EAATC,UASvB,OAReC,EAAAA,EAAAA,OASbC,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAC,SAAA,EACbC,EAAAA,EAAAA,KAAA,OAAAD,UACEF,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CACHC,UAAU,cACVC,eAAe,QACfC,WAAW,SAAQL,SAAA,EAEnBC,EAAAA,EAAAA,KAACK,EAAAA,GAAK,CAAAN,SAAC,eACPC,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CACHC,KAAMC,EAAAA,EACNC,QAAQ,SACRC,QAAQ,0BAIdb,EAAAA,EAAAA,MAACc,EAAAA,GAAK,CAACT,UAAU,OAAMH,SAAA,EACrBC,EAAAA,EAAAA,KAACY,EAAAA,GAAS,CAAAb,UACRF,EAAAA,EAAAA,MAACgB,EAAAA,GAAQ,CAAAd,SAAA,EACPC,EAAAA,EAAAA,KAACc,EAAAA,GAAe,CAAAf,SAAC,mBACjBC,EAAAA,EAAAA,KAACc,EAAAA,GAAe,CAACZ,UAAU,YAAWH,SAAC,sBAGvCC,EAAAA,EAAAA,KAACc,EAAAA,GAAe,CAACZ,UAAU,YAAWH,SAAC,qBAGvCC,EAAAA,EAAAA,KAACc,EAAAA,GAAe,CAACZ,UAAU,YAAWH,SAAC,mBAG3CC,EAAAA,EAAAA,KAACe,EAAAA,GAAS,CAAAhB,SACPJ,EAAUqB,KAAI,SAACC,GAAI,OAClBpB,EAAAA,EAAAA,MAACgB,EAAAA,GAAQ,CAAAd,SAAA,EACPC,EAAAA,EAAAA,KAACkB,EAAAA,GAAI,CAACC,GAAE,KAAAC,OAAOH,EAAKI,IAAKtB,UACvBC,EAAAA,EAAAA,KAACsB,EAAAA,GAAS,CAAAvB,SAAEkB,EAAKM,mBAEnBvB,EAAAA,EAAAA,KAACsB,EAAAA,GAAS,CAACpB,UAAU,YAAWH,SAC7BkB,EAAKO,oBAERxB,EAAAA,EAAAA,KAACsB,EAAAA,GAAS,CAACpB,UAAU,YAAWH,SAC7BkB,EAAKQ,mBAERzB,EAAAA,EAAAA,KAACsB,EAAAA,GAAS,CAACpB,UAAU,YAAWH,SAAEkB,EAAKS,aAV1BT,EAAKI,GAWT,WAQvB,E,UCpEA,MATA,WACE,IAAM1B,GAAYgC,EAAAA,EAAAA,IAAmB,aACrC,OACE3B,EAAAA,EAAAA,KAACF,EAAAA,SAAc,CAAAC,UACbC,EAAAA,EAAAA,KAAC4B,EAAa,CAACjC,UAAWA,KAGhC,EAGO,SAAekC,EAAMC,GAAA,OAAAC,EAAAC,MAAC,KAADC,UAAA,CAwB3B,SAAAF,IAAA,OAAAA,GAAAG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAxBM,SAAAC,EAAA3C,GAAA,IAAA4C,EAAAjB,EAAAkB,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGuB,OAHQpD,EAAPqD,QAAST,EAAM5C,EAAN4C,OAChCjB,EAAKiB,EAAOjB,GACdkB,EAAM,oDAAsDlB,EAAI,aAC9DmB,GAAQQ,EAAAA,EAAAA,gBAAcJ,EAAAE,KAAA,EAELG,MAAMV,EAAK,CAChCW,OAAQ,MACRC,QAAS,CACPC,cAAe,UAAYZ,EAC3B,8BAA+B,OAEhC,KAAD,EANY,GAOU,OAPlBC,EAAQG,EAAAS,MAODC,OAAc,CAAAV,EAAAE,KAAA,eAAAF,EAAAW,OAAA,SAClBd,GAAQ,UAEO,MAApBA,EAASa,OAAc,CAAAV,EAAAE,KAAA,gBAAAF,EAAAW,OAAA,SAClBd,GAAQ,WAEZA,EAASe,GAAG,CAADZ,EAAAE,KAAA,eACRW,EAAAA,EAAAA,IAAK,CAAEC,QAAS,aAAe,CAAEJ,OAAQ,MAAO,KAAD,UAAAV,EAAAE,KAAA,GAGjCL,EAASgB,OAAO,KAAD,GAAxB,OAAPf,EAAOE,EAAAS,KAAAT,EAAAW,OAAA,SACNb,GAAO,yBAAAE,EAAAe,OAAA,GAAAtB,EAAA,MACfL,MAAA,KAAAC,UAAA,C","sources":["components/IncidentComps/ViewIncidents.js","pages/IncidentPages/ViewIncidentsPage.js"],"sourcesContent":["import React from \"react\";\nimport { useSubmit } from \"react-router-dom\";\nimport {\n  InformationCircleIcon,\n  PrinterIcon,\n} from \"@heroicons/react/24/outline\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Icon,\n  Table,\n  TableRow,\n  TableCell,\n  TableHead,\n  TableHeaderCell,\n  TableBody,\n  Title,\n  Flex,\n  Select,\n  SelectItem,\n  MultiSelect,\n  MultiSelectItem,\n} from \"@tremor/react\";\n\nfunction ViewIncidents({ incidents }) {\n  const submit = useSubmit();\n  function startDeleteHandler() {\n    const proceed = window.confirm(\"Are you sure?\");\n\n    if (proceed) {\n      submit(null, { method: \"delete\" });\n    }\n  }\n  return (\n    <React.Fragment>\n      <div>\n        <Flex\n          className=\"space-x-0.5\"\n          justifyContent=\"start\"\n          alignItems=\"center\"\n        >\n          <Title>Incidents</Title>\n          <Icon\n            icon={InformationCircleIcon}\n            variant=\"simple\"\n            tooltip=\"Shows incidents\"\n          />\n        </Flex>\n      </div>\n      <Table className=\"mt-6\">\n        <TableHead>\n          <TableRow>\n            <TableHeaderCell>Incident Date</TableHeaderCell>\n            <TableHeaderCell className=\"text-left\">\n              Person Reporting\n            </TableHeaderCell>\n            <TableHeaderCell className=\"text-left\">\n              Person notified\n            </TableHeaderCell>\n            <TableHeaderCell className=\"text-left\">location</TableHeaderCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {incidents.map((item) => (\n            <TableRow key={item.id}>\n              <Link to={`./${item.id}`}>\n                <TableCell>{item.incident_date}</TableCell>\n              </Link>\n              <TableCell className=\"text-left\">\n                {item.person_reporting}\n              </TableCell>\n              <TableCell className=\"text-left\">\n                {item.person_notified}\n              </TableCell>\n              <TableCell className=\"text-left\">{item.location}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n\n      \n    </React.Fragment>\n  );\n}\n\nexport default ViewIncidents;\n","import React from \"react\";\nimport { json, useRouteLoaderData } from \"react-router-dom\";\nimport ViewIncidents from \"../../components/IncidentComps/ViewIncidents\";\nimport { getAuthToken } from \"../../util/Auth\";\n\nfunction ViewIncidentsPage() {\n  const incidents = useRouteLoaderData(\"incidents\");\n  return (\n    <React.Fragment>\n      <ViewIncidents incidents={incidents} />\n    </React.Fragment>\n  );\n}\n\nexport default ViewIncidentsPage;\nexport async function loader({ request, params }) {\n  const id = params.id;\n  let url = \"https://homes-test.onrender.com/incident-reports/\" + id +\"/incidents\";\n  const token = getAuthToken();\n\n  const response = await fetch(url, {\n    method: \"get\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n  });\n  if (response.status === 404) {\n    return response;\n  }\n  if (response.status === 400) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({ message: \"Wrong Url\" }, { status: 500 });\n  }\n\n  const resData = await response.json();\n  return resData;\n}\n"],"names":["_ref","incidents","useSubmit","_jsxs","React","children","_jsx","Flex","className","justifyContent","alignItems","Title","Icon","icon","InformationCircleIcon","variant","tooltip","Table","TableHead","TableRow","TableHeaderCell","TableBody","map","item","Link","to","concat","id","TableCell","incident_date","person_reporting","person_notified","location","useRouteLoaderData","ViewIncidents","loader","_x","_loader","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","url","token","response","resData","wrap","_context","prev","next","request","getAuthToken","fetch","method","headers","Authorization","sent","status","abrupt","ok","json","message","stop"],"sourceRoot":""}