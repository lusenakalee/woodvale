{"version":3,"file":"static/js/2406.76edbf5d.chunk.js","mappings":"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","sources":["components/UserComps/ShowUserProfile.js","pages/UserPages/ProfilePage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useActionData } from \"react-router-dom\";\r\nimport { getAuthToken } from \"../../util/Auth\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nfunction ShowUserProfile({ user }) {\r\n  const imgToken = getAuthToken();\r\n\r\n  const data = useActionData();\r\n\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n\r\n  if (data && data.errors) {\r\n    Object.values(data.errors).forEach((err) => {\r\n      toast.error(err);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchImage = async () => {\r\n      try {\r\n        const response = await fetch(`https://woodvale-test-2.onrender.com/upload/${user.id}`, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + imgToken,\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const blob = await response.blob();\r\n          const url = URL.createObjectURL(blob);\r\n          setImageUrl(url);\r\n        } else {\r\n          console.error(\"Error fetching image:\", response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching image:\", error);\r\n      }\r\n    };\r\n\r\n    fetchImage();\r\n  }, [user, imgToken]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ToastContainer />\r\n      <div className=\"flex gap-x-4\">\r\n        {imageUrl && (\r\n          <img\r\n            className=\"h-12 w-12 flex-none rounded-full bg-gray-50\"\r\n            src=\"\"\r\n            alt=\"Profile\"\r\n          />\r\n        )}\r\n        <div className=\"min-w-0 flex-auto\">\r\n          <p className=\"text-sm font-semibold leading-6 text-gray-900\">\r\n            {user.first_name}'s Information\r\n          </p>\r\n          <p className=\"mt-1 truncate text-xs leading-5 text-gray-500\">\r\n            {\" \"}\r\n            General details and Information.\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 hover:bg-white sm:gap-4 sm:px-0\">\r\n        <dt className=\"text-sm font-medium leading-6 text-gray-900\">\r\n          Full name\r\n        </dt>\r\n        <dd className=\"mt-1 text-sm leading-6 text-gray-700 sm:col-span-2 sm:mt-0\">\r\n          {user.first_name} {user.last_name}\r\n        </dd>\r\n      </div>\r\n      <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 hover:bg-white sm:gap-4 sm:px-0\">\r\n        <dt className=\"text-sm font-medium leading-6 text-gray-900\">\r\n          Username\r\n        </dt>\r\n        <dd className=\"mt-1 text-sm leading-6 text-gray-700 sm:col-span-2 sm:mt-0\">\r\n          {user.username}\r\n        </dd>\r\n      </div>\r\n      <div className=\"px-4 py-3 sm:grid sm:grid-cols-3 hover:bg-white sm:gap-4 sm:px-0\">\r\n        <dt className=\"text-sm font-medium leading-6 text-gray-900\">\r\n          User type\r\n        </dt>\r\n        <dd className=\"mt-1 text-sm leading-6 text-gray-700 sm:col-span-2 sm:mt-0\">\r\n          {user.is_admin === true ? \"Admin\" : \"Care Giver\"}\r\n        </dd>\r\n      </div>\r\n\r\n   \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ShowUserProfile;\r\n","import React from \"react\";\r\nimport { json, useRouteLoaderData } from \"react-router-dom\";\r\nimport ShowUserProfile from \"../../components/UserComps/ShowUserProfile\";\r\nimport { getAuthToken } from \"../../util/Auth\";\r\n\r\nfunction ProfilePage() {\r\n  const user = useRouteLoaderData(\"profile\");\r\n  return (\r\n    <React.Fragment>\r\n      <main>\r\n        <div className=\"mx-auto max-w-7xl py-6 sm:px-6 lg:px-8\">\r\n      <ShowUserProfile user={user} />\r\n      </div>\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ProfilePage;\r\n\r\nexport async function loader({ request }) {\r\n  let url = \"https://woodvale-test-2.onrender.com/current_user\";\r\n  const token = getAuthToken();\r\n  const response = await fetch(url, {\r\n    method: \"get\",  \r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    },\r\n  });\r\n  if (response.status === 400) {\r\n    return response;\r\n  }\r\n  if (response.status === 404) {\r\n    return response;\r\n  }\r\n  if (!response.ok) {\r\n    throw json({ message: \"Server Error\" }, { status: 500 });\r\n  }\r\n\r\n  const resData = await response.json();\r\n  \r\n  return resData;\r\n}\r\n\r\n\r\n"],"names":["_ref","user","imgToken","getAuthToken","data","useActionData","_useState","useState","_useState2","_slicedToArray","imageUrl","setImageUrl","errors","Object","values","forEach","err","toast","error","useEffect","fetchImage","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","blob","url","wrap","_context","prev","next","fetch","concat","id","headers","Authorization","sent","ok","URL","createObjectURL","console","status","t0","stop","apply","arguments","_jsxs","React","children","_jsx","ToastContainer","className","src","alt","first_name","last_name","username","is_admin","useRouteLoaderData","ShowUserProfile","loader","_x","_loader","token","resData","request","method","abrupt","json","message"],"sourceRoot":""}