{"version":3,"file":"static/js/4862.10628b63.chunk.js","mappings":"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","sources":["components/UserComps/UserList.js","pages/UserPages/AllUsers.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  InformationCircleIcon,\r\n  PrinterIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport {\r\n  Icon,\r\n  Table,\r\n  TableRow,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeaderCell,\r\n  TableBody,\r\n  Title,\r\n  Flex,\r\n  Select,\r\n  SelectItem,\r\n  MultiSelect,\r\n  MultiSelectItem,\r\n} from \"@tremor/react\";\r\nimport Papa from \"papaparse\";\r\n\r\nfunction UserList({ users }) {\r\n  const [selectedNames, setSelectedNames] = useState([]);\r\n\r\n  const isUserSelected = (user) =>\r\n    selectedNames.includes(user.first_name) || \r\n    selectedNames.length === 0;\r\n\r\n  const filteredUsers = users.filter(isUserSelected);\r\n\r\n  const handleExportCSV = () => {\r\n    const csvData = Papa.unparse(filteredUsers);\r\n    const blob = new Blob([csvData], { type: \"text/csv;charset=utf-8;\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", url);\r\n    link.setAttribute(\"download\", \"users.csv\");\r\n    link.style.visibility = \"hidden\";\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n\r\n\r\n  const USERS_PER_PAGE = 10; // Set the number of USERSs to display per page\r\n  const [currentPage, setCurrentPage] = useState(1); // Current page number\r\n    // Calculate pagination\r\n    const totalUsers = filteredUsers.length;\r\n    const totalPages = Math.ceil(totalUsers / USERS_PER_PAGE);\r\n  \r\n    // Get the slice of USERSs to display based on the current page\r\n    const startIndex = (currentPage - 1) * USERS_PER_PAGE;\r\n    const endIndex = startIndex + USERS_PER_PAGE;\r\n    const usersToShow = filteredUsers.slice(startIndex, endIndex);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <Flex\r\n          className=\"space-x-0.5\"\r\n          justifyContent=\"start\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Title>Staff</Title>\r\n          <Icon\r\n            icon={InformationCircleIcon}\r\n            variant=\"simple\"\r\n            tooltip=\"Shows general staff information\"\r\n          />\r\n          <Title></Title>\r\n        </Flex>\r\n      </div>\r\n      <div className=\"flex space-x-2\">\r\n        <MultiSelect\r\n          className=\"max-w-full sm:max-w-xs\"\r\n          onValueChange={setSelectedNames}\r\n          placeholder=\"Search by name...\"\r\n        >\r\n          {users.map((item) => (\r\n            <MultiSelectItem key={item.first_name} value={item.first_name}>\r\n              {item.first_name}\r\n            </MultiSelectItem>\r\n          ))}\r\n        </MultiSelect>\r\n\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleExportCSV}\r\n          className=\"inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\"\r\n        >\r\n          <PrinterIcon\r\n            className=\"-ml-0.5 mr-1.5 h-5 w-5 text-gray-400\"\r\n            aria-hidden=\"true\"\r\n          />\r\n          Export\r\n        </button>\r\n      </div>\r\n      <Table className=\"mt-6\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableHeaderCell>First Name</TableHeaderCell>\r\n            <TableHeaderCell className=\"text-left\">Last Name</TableHeaderCell>\r\n            <TableHeaderCell className=\"text-left\">Username</TableHeaderCell>\r\n            <TableHeaderCell className=\"text-left\">User Type</TableHeaderCell>\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        <TableBody>\r\n          {usersToShow.map((item) => (\r\n            <TableRow key={item.id} className=\"hover:bg-white\">\r\n              <TableCell className=\"w-auto hover:text-indigo-600 hover:underline\">\r\n                <Link to={`./${item.id}`}>{item.first_name}</Link>\r\n              </TableCell>\r\n              <TableCell className=\"text-left\">{item.last_name}</TableCell>\r\n              <TableCell className=\"text-left\">{item.username}</TableCell>\r\n              <TableCell className=\"text-left\">\r\n                {item.is_admin === true ? \"Admin\" : \"User\"}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n\r\n       {/* Pagination */}\r\n       <ol className=\"flex justify-center gap-1 text-xs font-medium mt-4\">\r\n        {currentPage > 1 && (\r\n          <li>\r\n            <a\r\n              href=\"#\"\r\n              onClick={() => setCurrentPage((prev) => prev - 1)}\r\n              className=\"inline-flex h-8 w-8 items-center justify-center rounded border border-gray-100 bg-white text-gray-900 rtl:rotate-180\"\r\n            >\r\n              <span className=\"sr-only\">Prev Page</span>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"h-3 w-3\"\r\n                viewBox=\"0 0 20 20\"\r\n                fill=\"currentColor\"\r\n              >\r\n                <path\r\n                  fillRule=\"evenodd\"\r\n                  d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"\r\n                  clipRule=\"evenodd\"\r\n                />\r\n              </svg>\r\n            </a>\r\n          </li>\r\n        )}\r\n\r\n        {Array.from({ length: totalPages }, (_, index) => index + 1).map(\r\n          (pageNum) => (\r\n            <li key={pageNum}>\r\n              <a\r\n                href=\"#\"\r\n                onClick={() => setCurrentPage(pageNum)}\r\n                className={`${\r\n                  pageNum === currentPage\r\n                    ? \"block h-8 w-8 rounded border-blue-600 bg-indigo-600 text-center leading-8 text-white\"\r\n                    : \"block h-8 w-8 rounded border border-gray-100 bg-white text-center leading-8 text-gray-900\"\r\n                }`}\r\n              >\r\n                {pageNum}\r\n              </a>\r\n            </li>\r\n          )\r\n        )}\r\n\r\n        {currentPage < totalPages && (\r\n          <li>\r\n            <a\r\n              href=\"#\"\r\n              onClick={() => setCurrentPage((prev) => prev + 1)}\r\n              className=\"inline-flex h-8 w-8 items-center justify-center rounded border border-gray-100 bg-white text-gray-900 rtl:rotate-180\"\r\n            >\r\n              <span className=\"sr-only\">Next Page</span>\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"h-3 w-3\"\r\n                viewBox=\"0 0 20 20\"\r\n                fill=\"currentColor\"\r\n              >\r\n                <path\r\n                  fillRule=\"evenodd\"\r\n                  d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n                  clipRule=\"evenodd\"\r\n                />\r\n              </svg>\r\n            </a>\r\n          </li>\r\n        )}\r\n      </ol>\r\n\r\n\r\n\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default UserList;\r\n","import React from \"react\";\r\nimport { json, useRouteLoaderData } from \"react-router-dom\";\r\nimport UserList from \"../../components/UserComps/UserList\";\r\nimport { getAuthToken } from \"../../util/Auth\";\r\n\r\nfunction AllUsers() {\r\n  const users = useRouteLoaderData(\"users\");\r\n  return (\r\n    <React.Fragment>\r\n      <UserList users={users} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AllUsers;\r\n\r\nexport async function loader() {\r\n  const token = getAuthToken();\r\n\r\n  const response = await fetch(\"https://homes-test.onrender.com/user\", {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    },\r\n  });\r\n  if (response.status===400){\r\n    throw json({ message: \"Only the admin can view users\" }, { status: 400 });\r\n  }\r\n  if (!response.ok) {\r\n    throw json({ message: \"Cant get users\" }, { status: 500 });\r\n  } else {\r\n    const resData = await response.json();\r\n    return resData;\r\n  }\r\n}\r\n"],"names":["_ref","users","_useState","useState","_useState2","_slicedToArray","selectedNames","setSelectedNames","filteredUsers","filter","user","includes","first_name","length","_useState3","_useState4","currentPage","setCurrentPage","totalUsers","totalPages","Math","ceil","startIndex","endIndex","usersToShow","slice","_jsxs","React","children","_jsx","Flex","className","justifyContent","alignItems","Title","Icon","icon","InformationCircleIcon","variant","tooltip","MultiSelect","onValueChange","placeholder","map","item","MultiSelectItem","value","type","onClick","csvData","Papa","blob","Blob","url","URL","createObjectURL","link","document","createElement","setAttribute","style","visibility","body","appendChild","click","removeChild","PrinterIcon","Table","TableHead","TableRow","TableHeaderCell","TableBody","TableCell","Link","to","concat","id","last_name","username","is_admin","href","prev","xmlns","viewBox","fill","fillRule","d","clipRule","Array","from","_","index","pageNum","useRouteLoaderData","UserList","loader","_loader","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","response","resData","wrap","_context","next","getAuthToken","fetch","method","headers","Authorization","sent","status","json","message","ok","abrupt","stop"],"sourceRoot":""}