{"version":3,"file":"static/js/2104.ad7caa68.chunk.js","mappings":"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","sources":["components/IncidentComps/ViewIncidents.js","pages/IncidentPages/ViewIncidentsPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { useSubmit } from \"react-router-dom\";\r\nimport {\r\n  InformationCircleIcon,\r\n  PrinterIcon,\r\n} from \"@heroicons/react/24/outline\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Icon,\r\n  Table,\r\n  TableRow,\r\n  TableCell,\r\n  TableHead,\r\n  TableHeaderCell,\r\n  TableBody,\r\n  Title,\r\n  Flex,\r\n  Select,\r\n  SelectItem,\r\n  MultiSelect,\r\n  MultiSelectItem,\r\n} from \"@tremor/react\";\r\n\r\nfunction ViewIncidents({ incidents }) {\r\n  const submit = useSubmit();\r\n  function startDeleteHandler() {\r\n    const proceed = window.confirm(\"Are you sure?\");\r\n\r\n    if (proceed) {\r\n      submit(null, { method: \"delete\" });\r\n    }\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <Flex\r\n          className=\"space-x-0.5\"\r\n          justifyContent=\"start\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Title>Incidents</Title>\r\n          <Icon\r\n            icon={InformationCircleIcon}\r\n            variant=\"simple\"\r\n            tooltip=\"Shows incidents\"\r\n          />\r\n        </Flex>\r\n      </div>\r\n      <Table className=\"mt-6\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableHeaderCell>Incident Date</TableHeaderCell>\r\n            <TableHeaderCell className=\"text-right\">\r\n              Person Reporting\r\n            </TableHeaderCell>\r\n            <TableHeaderCell className=\"text-right\">\r\n              Person notified\r\n            </TableHeaderCell>\r\n            <TableHeaderCell className=\"text-right\">location</TableHeaderCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {incidents.map((item) => (\r\n            <TableRow key={item.id}>\r\n              <Link to={`./${item.id}`}>\r\n                <TableCell>{item.incident_date}</TableCell>\r\n              </Link>\r\n              <TableCell className=\"text-right\">\r\n                {item.person_reporting}\r\n              </TableCell>\r\n              <TableCell className=\"text-right\">\r\n                {item.person_notified}\r\n              </TableCell>\r\n              <TableCell className=\"text-right\">{item.location}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ViewIncidents;\r\n","import React from \"react\";\r\nimport { json, useRouteLoaderData } from \"react-router-dom\";\r\nimport ViewIncidents from \"../../components/IncidentComps/ViewIncidents\";\r\nimport { getAuthToken } from \"../../util/Auth\";\r\n\r\nfunction ViewIncidentsPage() {\r\n  const incidents = useRouteLoaderData(\"incidents\");\r\n  return (\r\n    <React.Fragment>\r\n      <ViewIncidents incidents={incidents} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ViewIncidentsPage;\r\nexport async function loader({ request, params }) {\r\n  const id = params.id;\r\n  let url = \"https://homes-test.onrender.com/incident-reports/\" + id +\"https://homes-test.onrender.com/incidents\";\r\n  const token = getAuthToken();\r\n\r\n  const response = await fetch(url, {\r\n    method: \"get\",\r\n    headers: {\r\n      Authorization: \"Bearer \" + token,\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    },\r\n  });\r\n  if (response.status === 404) {\r\n    return response;\r\n  }\r\n  if (response.status === 400) {\r\n    return response;\r\n  }\r\n  if (!response.ok) {\r\n    throw json({ message: \"Wrong Url\" }, { status: 500 });\r\n  }\r\n\r\n  const resData = await response.json();\r\n  return resData;\r\n}\r\n"],"names":["_ref","incidents","useSubmit","_jsxs","React","children","_jsx","Flex","className","justifyContent","alignItems","Title","Icon","icon","InformationCircleIcon","variant","tooltip","Table","TableHead","TableRow","TableHeaderCell","TableBody","map","item","Link","to","concat","id","TableCell","incident_date","person_reporting","person_notified","location","useRouteLoaderData","ViewIncidents","loader","_x","_loader","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","url","token","response","resData","wrap","_context","prev","next","request","getAuthToken","fetch","method","headers","Authorization","sent","status","abrupt","ok","json","message","stop"],"sourceRoot":""}