{"version":3,"file":"static/js/7056.030f6a41.chunk.js","mappings":"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","sources":["webpack://woodvale/./src/components/UIComps/Modal.module.css?4635","components/UIComps/ModalComp.js","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","pages/RootPages/RequestDemoPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__b7dRO\",\"modal\":\"Modal_modal__wqjFJ\",\"slide-down\":\"Modal_slide-down__+S91a\"};","import React from \"react\";\r\nimport classes from \"./Modal.module.css\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nfunction Backdrop(props) {\r\n  return <div className={classes.backdrop}></div>;\r\n}\r\n\r\nfunction ModalOverlays(props) {\r\n  return (\r\n    <div className={classes.modal}>\r\n      <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst portalElement = document.getElementById(\"overlays\");\r\n\r\nfunction Modal(props) {\r\n  return (\r\n    <React.Fragment>\r\n      {ReactDOM.createPortal(<Backdrop />, portalElement)}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlays>{props.children}</ModalOverlays>,\r\n        portalElement\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.11.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import Modal from \"../../components/UIComps/ModalComp\";\r\nimport {\r\n  Form,\r\n  json,\r\n  redirect,\r\n  useActionData,\r\n  useNavigate,\r\n  useNavigation,\r\n} from \"react-router-dom\";\r\nimport { getAuthToken } from \"../../util/Auth\";\r\nimport React, { useRef } from 'react';\r\n\r\nimport emailjs from '@emailjs/browser';\r\n\r\n\r\nfunction RequestDemoPage() {\r\n  const navigate = useNavigate();\r\n  const data = useActionData();\r\n  function cancelHandler() {\r\n    navigate(\"..\");\r\n  }\r\n  const navigation = useNavigation();\r\n  const isSubmitting = navigation.state === \"submitting\";\r\n  const form = useRef();\r\n  \r\n  const sendEmail = (e) => {\r\n    e.preventDefault();\r\n\r\n    emailjs.sendForm('service_xdsx337', 'template_h0bx0qf', form.current, 'FBkV-qTMZeXtxWnTa')\r\n      .then((result) => {\r\n          console.log(result.text);\r\n      }, (error) => {\r\n          console.log(error.text);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Modal>\r\n      <form ref={form} onSubmit={sendEmail}>\r\n        <div>\r\n          <h2 className=\"text-base font-semibold leading-7 text-gray-900\">\r\n            Demo request form\r\n          </h2>\r\n          <p className=\"mt-1 text-sm leading-6 text-gray-600\">\r\n            You will receive an email shortly after filling tin this form with\r\n            access logins to your demo account.\r\n          </p>\r\n        </div>\r\n        <div className=\"mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6\">\r\n          <div className=\"sm:col-span-3\">\r\n            <label\r\n              htmlFor=\"first-name\"\r\n              className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n            >\r\n              First name\r\n            </label>\r\n            <div className=\"mt-2\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"first-name\"\r\n                id=\"first-name\"\r\n                autoComplete=\"given-name\"\r\n                className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"sm:col-span-3\">\r\n            <label\r\n              htmlFor=\"last-name\"\r\n              className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n            >\r\n              Last name\r\n            </label>\r\n            <div className=\"mt-2\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"last-name\"\r\n                id=\"last-name\"\r\n                autoComplete=\"family-name\"\r\n                className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"sm:col-span-4\">\r\n            <label\r\n              htmlFor=\"email\"\r\n              className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n            >\r\n              Email address\r\n            </label>\r\n            <div className=\"mt-2\">\r\n              <input\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                autoComplete=\"email\"\r\n                className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"sm:col-span-4\">\r\n            <label\r\n              className=\"block text-sm font-medium leading-6 text-gray-900\"\r\n            >\r\n              Company/Institution (optional*)\r\n            </label>\r\n            <div className=\"mt-2\">\r\n              <input\r\n                id=\"company\"\r\n                name=\"company\"\r\n                type=\"text\"\r\n                className=\"block w-full rounded-md border-0 py-1.5 text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 placeholder:text-gray-400 focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:text-sm sm:leading-6\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-6 flex items-center justify-end gap-x-6\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={cancelHandler}\r\n            className=\"text-sm font-semibold leading-6 text-gray-900\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n          type=\"submit\" \r\n          value=\"Send\" \r\n            className=\"rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\"\r\n          >\r\n            Get Access\r\n          </button>\r\n        </div>\r\n        </form>\r\n      </Modal>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default RequestDemoPage;\r\n"],"names":["Backdrop","props","_jsx","className","classes","backdrop","ModalOverlays","modal","children","content","portalElement","document","getElementById","_jsxs","React","ReactDOM","store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","_createClass","httpResponse","_classCallCheck","this","status","text","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","target","responseStatus","_ref2","open","Object","keys","forEach","key","setRequestHeader","send","form","uID","_userID","currentForm","querySelector","nodeName","findHTMLForm","formData","FormData","append","navigate","useNavigate","useActionData","useNavigation","state","useRef","Modal","ref","onSubmit","e","preventDefault","emailjs","current","then","result","console","log","error","htmlFor","type","name","id","autoComplete","onClick","value"],"sourceRoot":""}