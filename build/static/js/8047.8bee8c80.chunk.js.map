{"version":3,"file":"static/js/8047.8bee8c80.chunk.js","mappings":"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","sources":["components/ResidentComps/ResidentList.js","pages/ResidentPages/AllResidentsPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  InformationCircleIcon,\n  PrinterIcon,\n} from \"@heroicons/react/24/outline\";\nimport {\n  Icon,\n  Table,\n  TableRow,\n  TableCell,\n  TableHead,\n  TableHeaderCell,\n  TableBody,\n  BadgeDelta,\n  Title,\n  Flex,\n  Select,\n  SelectItem,\n  MultiSelect,\n  MultiSelectItem,\n} from \"@tremor/react\";\n\nexport default function ResidentList({ residentsList }) {\n  const [selectedResidentNames, setSelectedResidentNames] = useState([]);\n\n  const isResidentSelected = (resident) =>\n    selectedResidentNames.includes(resident.first_name) ||\n    selectedResidentNames.length === 0;\n\n  const filteredResidents = residentsList.filter(isResidentSelected);\n\n  return (\n    <>\n      <div>\n        <Flex\n          className=\"space-x-0.5\"\n          justifyContent=\"start\"\n          alignItems=\"center\"\n        >\n          <Title>Residents</Title>\n          <Icon\n            icon={InformationCircleIcon}\n            variant=\"simple\"\n            tooltip=\"Shows general employee information\"\n          />\n        </Flex>\n      </div>\n      <div className=\"flex space-x-2\">\n        <MultiSelect\n          className=\"max-w-full sm:max-w-xs\"\n          onValueChange={setSelectedResidentNames}\n          placeholder=\"Select resident...\"\n        >\n          {residentsList.map((item) => (\n            <MultiSelectItem\n              key={item.first_name}\n              value={item.first_name}\n              label={`${item.first_name} ${item.last_name}`}\n            />\n          ))}\n        </MultiSelect>\n        <Select className=\"max-w-full sm:max-w-xs\" defaultValue=\"all\">\n          <SelectItem value=\"all\">All</SelectItem>\n          <SelectItem value=\"first_name\">First Name</SelectItem>\n          <SelectItem value=\"last_name\">Last Name</SelectItem>\n          <SelectItem value=\"age\">Age</SelectItem>\n        </Select>\n        <button\n          type=\"button\"\n          className=\"inline-flex items-center rounded-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 shadow-sm ring-1 ring-inset ring-gray-300 hover:bg-gray-50\"\n        >\n          <PrinterIcon\n            className=\"-ml-0.5 mr-1.5 h-5 w-5 text-gray-400\"\n            aria-hidden=\"true\"\n          />\n          Export\n        </button>\n      </div>\n      <Table className=\"mt-6 table w-full\">\n        <TableHead>\n          <TableRow>\n            <TableHeaderCell className=\"w-auto\">First Name</TableHeaderCell>\n            <TableHeaderCell className=\"w-auto text-right\">\n              Last Name\n            </TableHeaderCell>\n            <TableHeaderCell className=\"w-auto text-right\">Age</TableHeaderCell>\n            <TableHeaderCell className=\"w-auto text-right\">\n              Date Registered\n            </TableHeaderCell>\n            <TableHeaderCell className=\"w-auto text-right\">\n              Gender\n            </TableHeaderCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {filteredResidents.map((item) => (\n            <TableRow key={item.id} className=\"hover:bg-white\">\n              <TableCell className=\"w-auto hover:text-indigo-600 hover:underline\">\n                <Link to={`./${item.id}`}>{item.first_name}</Link>\n              </TableCell>\n              <TableCell className=\"w-auto text-right\">\n                {item.last_name}\n              </TableCell>\n              <TableCell className=\"w-auto text-right\">{item.age}</TableCell>\n              <TableCell className=\"w-auto text-right\">\n                {item.date_registered}\n              </TableCell>\n              <TableCell className=\"w-auto text-right\">{item.gender}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </>\n  );\n}\n","import React from \"react\";\nimport ResidentList from \"../../components/ResidentComps/ResidentList\";\nimport { getAuthToken } from \"../../util/Auth\";\nimport { json, useRouteLoaderData } from \"react-router-dom\";\n\nfunction AllResidentsPage() {\n  const residentsList = useRouteLoaderData(\"all-residents\");\n  return (\n    <React.Fragment>\n      <main>\n        <div className=\"mx-auto max-w-7xl py-6 sm:px-6 lg:px-8\">\n          <ResidentList residentsList={residentsList} />\n        </div>\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default AllResidentsPage;\n\nexport async function loader() {\n  const token = getAuthToken();\n\n  const response = await fetch(\"https://woodvale-test-2.onrender.com/residents\", {\n    method: \"GET\",\n    headers: {\n      Authorization: \"Bearer \" + token,\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n  });\n  if (!response.ok) {\n    throw json({ message: \"Cant get residents\" }, { status: 500 });\n  } else {\n    const resData = await response.json();\n    return resData;\n  }\n}\n\n"],"names":["ResidentList","_ref","residentsList","_useState","useState","_useState2","_slicedToArray","selectedResidentNames","setSelectedResidentNames","filteredResidents","filter","resident","includes","first_name","length","_jsxs","_Fragment","children","_jsx","Flex","className","justifyContent","alignItems","Title","Icon","icon","InformationCircleIcon","variant","tooltip","MultiSelect","onValueChange","placeholder","map","item","MultiSelectItem","value","label","concat","last_name","Select","defaultValue","SelectItem","type","PrinterIcon","Table","TableHead","TableRow","TableHeaderCell","TableBody","TableCell","Link","to","id","age","date_registered","gender","useRouteLoaderData","React","loader","_loader","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","response","resData","wrap","_context","prev","next","getAuthToken","fetch","method","headers","Authorization","sent","ok","json","message","status","abrupt","stop"],"sourceRoot":""}